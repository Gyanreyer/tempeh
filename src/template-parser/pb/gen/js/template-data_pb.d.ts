// @generated by protoc-gen-es v1.6.0 with parameter "target=js+dts"
// @generated from file template-data.proto (package pb, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message pb.Attribute
 */
export declare class Attribute extends Message<Attribute> {
  /**
   * @generated from field: uint32 line = 1;
   */
  line: number;

  /**
   * @generated from field: uint32 column = 2;
   */
  column: number;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string value = 4;
   */
  value: string;

  constructor(data?: PartialMessage<Attribute>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pb.Attribute";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Attribute;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Attribute;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Attribute;

  static equals(a: Attribute | PlainMessage<Attribute> | undefined, b: Attribute | PlainMessage<Attribute> | undefined): boolean;
}

/**
 * @generated from message pb.TmphNode
 */
export declare class TmphNode extends Message<TmphNode> {
  /**
   * @generated from field: uint32 line = 1;
   */
  line: number;

  /**
   * @generated from field: uint32 column = 2;
   */
  column: number;

  /**
   * @generated from field: optional string tagName = 3;
   */
  tagName?: string;

  /**
   * @generated from field: repeated pb.Attribute attributes = 4;
   */
  attributes: Attribute[];

  /**
   * @generated from field: repeated pb.TmphNode childNodes = 5;
   */
  childNodes: TmphNode[];

  /**
   * @generated from field: optional string textContent = 6;
   */
  textContent?: string;

  constructor(data?: PartialMessage<TmphNode>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pb.TmphNode";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TmphNode;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TmphNode;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TmphNode;

  static equals(a: TmphNode | PlainMessage<TmphNode> | undefined, b: TmphNode | PlainMessage<TmphNode> | undefined): boolean;
}

/**
 * @generated from message pb.TemplateData
 */
export declare class TemplateData extends Message<TemplateData> {
  /**
   * @generated from field: string src = 1;
   */
  src: string;

  /**
   * @generated from field: repeated pb.TmphNode nodes = 2;
   */
  nodes: TmphNode[];

  constructor(data?: PartialMessage<TemplateData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pb.TemplateData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TemplateData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TemplateData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TemplateData;

  static equals(a: TemplateData | PlainMessage<TemplateData> | undefined, b: TemplateData | PlainMessage<TemplateData> | undefined): boolean;
}

